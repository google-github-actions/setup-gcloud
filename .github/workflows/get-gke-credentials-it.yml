name: get-gke-credentials Integration

on:
  push:
    paths:
    - 'get-gke-credentials/**'
    - '.github/workflows/get-gke-credentials**'

jobs:
  gcloud:
    name: with setup-gcloud & kubectl
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master # Set up ADC for credentials
      with:
        service_account_key: ${{ secrets.GET_GKE_CRED_SA_KEY_JSON }}
        export_default_credentials: true
    - id: build
      name: Build dist
      working-directory: get-gke-credentials
      run: |-
        npm install
        npm run build
    - id: get-kubeconfig
      uses: ./get-gke-credentials
      with:
        project_id: ${{ secrets.GET_GKE_CRED_PROJECT }}
        cluster_name: ${{ secrets.GET_GKE_CRED_CLUSTER_NAME }}
        location: ${{ secrets.GET_GKE_CRED_CLUSTER_LOCATION }}
        use_auth_provider: true
    - name: test-kubectl # Use kubectl with the generated kubeconfig to auth and list pods. There should be no pods in the default ns.
      run: |
        pods=$(kubectl get pods -o=jsonpath='{$.items[*]}')
        if [ -n "$pods" ]
        then
            echo "Expected no pods. Got ${pods}"
            exit 1
        fi

  base64:
    name: with base64 creds & API
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: build
      name: Build dist
      working-directory: get-gke-credentials
      run: |-
        npm install
        npm run build
    - id: get-kubeconfig
      uses: ./get-gke-credentials
      with:
        project_id: ${{ secrets.GET_GKE_CRED_PROJECT }}
        credentials: ${{ secrets.GET_GKE_CRED_SA_KEY_B64 }}
        cluster_name: ${{ secrets.GET_GKE_CRED_CLUSTER_NAME }}
        location: ${{ secrets.GET_GKE_CRED_CLUSTER_LOCATION }}
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: npm install
      working-directory: ./get-gke-credentials
    - name: integration tests
      run: npm run e2e-tests
      working-directory: ./get-gke-credentials

  json-api:
    name: with json creds & API
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: build
      name: Build dist
      working-directory: get-gke-credentials
      run: |-
        npm install
        npm run build
    - id: get-kubeconfig
      uses: ./get-gke-credentials
      with:
        project_id: ${{ secrets.GET_GKE_CRED_PROJECT }}
        credentials: ${{ secrets.GET_GKE_CRED_SA_KEY_JSON }}
        cluster_name: ${{ secrets.GET_GKE_CRED_CLUSTER_NAME }}
        location: ${{ secrets.GET_GKE_CRED_CLUSTER_LOCATION }}
    - run: npm install
      working-directory: ./get-gke-credentials
    - name: integration tests
      run: npm run e2e-tests
      working-directory: ./get-gke-credentials

  json-kubectl:
    name: with json creds & kubectl
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: build
      name: Build dist
      working-directory: get-gke-credentials
      run: |-
        npm install
        npm run build
    - id: get-kubeconfig
      uses: ./get-gke-credentials
      with:
        project_id: ${{ secrets.GET_GKE_CRED_PROJECT }}
        credentials: ${{ secrets.GET_GKE_CRED_SA_KEY_JSON }}
        cluster_name: ${{ secrets.GET_GKE_CRED_CLUSTER_NAME }}
        location: ${{ secrets.GET_GKE_CRED_CLUSTER_LOCATION }}
    - name: test-kubectl # Use kubectl with the generated kubeconfig to auth and list pods. There should be no pods in the default ns.
      run: |
        pods=$(kubectl get pods -o=jsonpath='{$.items[*]}')
        if [ -n "$pods" ]
        then
            echo "Expected no pods. Got ${pods}"
            exit 1
        fi
